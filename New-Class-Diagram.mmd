classDiagram
    CheckersBoard ..|> IBoard 
    Player ..|> IPlayer
    Piece --> PieceStatus
    Piece --> PieceColor
    CheckersBoard"1"..*"n"Piece
    GameController"1" ..* "1"CheckersBoard
    GameController"1"..*"2" IPlayer
    GameController --> GameStatus
    GameController --> Position

    class IPlayer{
        <<Interface>>
        +string Name[+get;]
        +int Id[+get;]
    }
    class IBoard{
        <<Interface>>
        +Layout~T~ [+get;]
    }

    class PieceStatus{
        <<Enumeration>>
        Regular
        King
    }
    class PieceColor{
        <<Enumuration>>
        Blue
        Red
    }
    class GameStatus{
        <<Enumeration>>
        NotReady
        Ready
        OnGoing
        GameOver
    }

    class Position{
        +int Row [+get; +set]
        +int Column [+get; +set]

        +Position(int row, int column)
        +Override ToString() string
    }
    class Piece{
        +PieceStatus Status [+get; +set;]
        +PieceColor Color [+get;]
        +int Id [+get;]

        +Piece(int id, PieceColor color)
        +Override Equals(object? obj) bool
        +Override GetHashCode() int
    }
    class Player{
        +string Name[+get;]
        +int Id[+get;]
        
        +Player(int id, string name)
        +Override Equals(object? obj) bool
        +Override GetHashCode() int
    }
    class CheckersBoard{
        +int Size [+get;]
        +Piece?[,] Layout [+get; +set;]

        +CheckersBoard(int size)
    }
    class GameController{
        -Dictionary~IPlayer; List~Piece~~ _playerPieces
        -IBoard<Piece?[,]> _board
        -GameStatus _status
        -IPlayer? _currentPlayer
        +Action~Piece~ PieceCaptured
        +Action~Piece, Position~ PieceMoved
        +Action~IPlayer~ PlayerAdded
        +Action~IPlayer~ PlayerTurnChanged
        +Action~GameStatus~ StatusChanged

        +GameController()
        #OnChangeStatus(GameStatus status) void
        #OnChangeTurnPlayer(IPlayer player) void
        #OnAddPlayer(IPlayer AddPlayer) void
        #OnMovePiece(Piece piece, Position position) void
        #OnCapturePiece(Piece piece) void
        +AddPlayer(IPlayer player) bool
        +SetCurrentPlayer(IPlayer player) bool
        +GetCurrentPlayer() IPlayer?
        +GetActivePlayer() IEnumerable~IPlayer~
        +RemoveAllPlayer() void
        +SetPiecesPlayer(IPlayer player, List~Piece~ pieces) bool
        +GetPlayerPieces() Dictionary~IPlayer; List~Piece~~
        +GetPlayerPieces(IPlayer player) IEnumerable~Piece~
        -IsPlayerValid(IPlayer player) bool
        +GeneratePieces(PieceColor color, int quantity) IEnumerable~Piece~
        +SetBoard(IBoard~Piece?[,]~ board) bool
        +GetBoardSize() int
        +GetBoardLayout() Piece[,]
        +SetPieceToBoard() bool
        +SetPieceToBoard(IPlayer player) bool
        -SetPieceToBoard(Piece piece, Position position) bool
        -SetPieceToBoard(Piece piece, int row, int column) bool
        +GetPieces() IEnumerable~Piece~
        +GetPiece(IPlayer player, int id) Piece?
        +GetPiece(Position position) Piece?
        +GetPiece(int row, int column) Piece?
        +RemovePiece(IPlayer player, int id) bool
        +RemovePiece(Position position) bool
        +RemovePiece(int row, int column) bool
        +CountPieceOnBoard() int
        +MaxPlayerPieces() int
        +GetPosition(Piece piece) Position?
        +GetPossibleMoves(IPlayer player) IEnumerable~Position~
        +GetPossibleMoves(Piece piece) IEnumerable~Position~
        +GetPossibleStandardMoves(Piece piece) IEnumerable~Position~
        +GetPossibleJumpMoves(Piece piece) IEnumerable~Position~
        -CanMoveBackward(Piece piece) bool
        -IsValidMove(int toRow, int toColumn) bool
        -WithinBoundaries(int row, int column) bool
        +MovePiece(Position source, Position target) bool
        +MovePiece(Piece piece, Position target, in bool firstMove) bool
        +ValidateNewPosition(Piece piece, Position target, in bool firstMove) bool
        +IsJumpMove(Position source, Position target)
        -CapturePieceInBetween(Position source, Position target)
        -RemovePieceFromBoard(Position position)
        -RemovePieceFromBoard(int row, int column)
        -RemvoePieceFromPlayer(piece removedPiece)
        +PromotePiece(Piece piece) bool
        +PromotePieceFromPlayer(Piece promotedPiece) bool
        -SetGamestatus(GameStatus) bool
        +GetStatus() GameStatus
        +Start() bool
        +GameOver() bool
        +GetWinner() IPlayer?
        +NextTurn() bool
        +Resign(IPlayer player) bool
    }
